{"remainingRequest":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\src\\store\\modules\\utilisateur.module.js","dependencies":[{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\src\\store\\modules\\utilisateur.module.js","mtime":1634637103978},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXRpbGlzYXRldXJBcGkgfSBmcm9tICJAL19hcGkvdXRpbGlzYXRldXIuYXBpLmpzIjsKZXhwb3J0IHZhciB1dGlsaXNhdGV1ciA9IHsKICBzdGF0ZTogewogICAgdXRpbGlzYXRldXI6IHsKICAgICAgaWQ6IG51bGwsCiAgICAgIGxvZ2luOiBudWxsLAogICAgICBwYXNzd29yZDogbnVsbCwKICAgICAgcHJlbm9tOiBudWxsLAogICAgICBlbnRyZXByaXNlRHRvOiBudWxsLAogICAgICByb2xlc0R0bzogW10sCiAgICAgIGV0dWRpYW50OiB7fSwKICAgICAgZm9ybWF0ZXVyOiB7fSwKICAgICAgY2VmOiB7fQogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0VXRpbGlzYXRldXI6IGZ1bmN0aW9uIGdldFV0aWxpc2F0ZXVyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51dGlsaXNhdGV1cjsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1VUSUxJU0FURVVSOiBmdW5jdGlvbiBTRVRfVVRJTElTQVRFVVIoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudXRpbGlzYXRldXIgPSBkYXRhOyAvL1NpIHJlZmVyZW50LCBvbiBsdWkgYWpvdXRlIGxlIHJvbGUKCiAgICAgIHV0aWxpc2F0ZXVyQXBpLmlzUmVmZXJlbnQoZGF0YS5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UpIHN0YXRlLnV0aWxpc2F0ZXVyLnJvbGVzRHRvLnB1c2goewogICAgICAgICAgaWQ6IDk5OSwKICAgICAgICAgIGludGl0dWxlOiAiUkVGRVJFTlQiCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgc2V0VXRpbGlzYXRldXI6IGZ1bmN0aW9uIHNldFV0aWxpc2F0ZXVyKF9yZWYsIGRhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ1NFVF9VVElMSVNBVEVVUicsIGRhdGEpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["C:/Users/Admin stagiaire.DESKTOP-8967908/Desktop/Projet_CFA/AppliCFAFront/cfa-portal/src/store/modules/utilisateur.module.js"],"names":["utilisateurApi","utilisateur","state","id","login","password","prenom","entrepriseDto","rolesDto","etudiant","formateur","cef","getters","getUtilisateur","mutations","SET_UTILISATEUR","data","isReferent","then","response","push","intitule","actions","setUtilisateur","commit"],"mappings":"AAAA,SAASA,cAAT,QAA+B,2BAA/B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACHD,IAAAA,WAAW,EAAE;AACTE,MAAAA,EAAE,EAAE,IADK;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,QAAQ,EAAE,IAHD;AAITC,MAAAA,MAAM,EAAE,IAJC;AAKTC,MAAAA,aAAa,EAAE,IALN;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,GAAG,EAAE;AATI;AADV,GADgB;AAcvBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,cAAc,EAAE,wBAAAX,KAAK,EAAI;AACrB,aAAOA,KAAK,CAACD,WAAb;AACH;AAHI,GAdc;AAmBvBa,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACUb,KADV,EACiBc,IADjB,EACsB;AACzBd,MAAAA,KAAK,CAACD,WAAN,GAAoBe,IAApB,CADyB,CAGzB;;AACAhB,MAAAA,cAAc,CAACiB,UAAf,CAA0BD,IAAI,CAACb,EAA/B,EAAmCe,IAAnC,CAAyC,UAAAC,QAAQ,EAAI;AACjD,YAAGA,QAAH,EAAajB,KAAK,CAACD,WAAN,CAAkBO,QAAlB,CAA2BY,IAA3B,CAAgC;AAACjB,UAAAA,EAAE,EAAE,GAAL;AAAUkB,UAAAA,QAAQ,EAAE;AAApB,SAAhC;AAEhB,OAHD;AAIH;AATM,GAnBY;AA8BvBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,cADK,gCACsBP,IADtB,EAC2B;AAAA,UAAfQ,MAAe,QAAfA,MAAe;AAC5BA,MAAAA,MAAM,CAAC,iBAAD,EAAoBR,IAApB,CAAN;AACD;AAHE;AA9Bc,CAApB","sourcesContent":["import { utilisateurApi } from \"@/_api/utilisateur.api.js\";\r\n\r\nexport const utilisateur = {\r\n    state: {\r\n        utilisateur: {\r\n            id: null,\r\n            login: null,\r\n            password: null,\r\n            prenom: null,\r\n            entrepriseDto: null,\r\n            rolesDto: [],\r\n            etudiant: {},\r\n            formateur: {},\r\n            cef: {},\r\n        },\r\n    },\r\n    getters: {\r\n        getUtilisateur: state => {\r\n            return state.utilisateur;\r\n        },\r\n    },\r\n    mutations: {\r\n        SET_UTILISATEUR( state, data){\r\n            state.utilisateur = data;\r\n\r\n            //Si referent, on lui ajoute le role\r\n            utilisateurApi.isReferent(data.id).then( response => {\r\n                if(response) state.utilisateur.rolesDto.push({id: 999, intitule: \"REFERENT\"});\r\n                \r\n            })\r\n        },\r\n    },\r\n    actions: {\r\n        setUtilisateur({ commit }, data){\r\n            commit('SET_UTILISATEUR', data);\r\n          }\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}]}