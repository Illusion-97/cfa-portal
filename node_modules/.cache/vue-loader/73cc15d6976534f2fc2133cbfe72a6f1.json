{"remainingRequest":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\src\\components\\utils\\Planning.vue?vue&type=style&index=0&id=ba33c0aa&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\src\\components\\utils\\Planning.vue","mtime":1634717085913},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\css-loader\\index.js","mtime":1634732407337},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1634732415296},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634732405246},{"path":"C:\\Users\\Admin stagiaire.DESKTOP-8967908\\Desktop\\Projet_CFA\\AppliCFAFront\\cfa-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1634732415295}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCnRhYmxlIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB0YWJsZS1sYXlvdXQ6IGZpeGVkOw0KICBtaW4taGVpZ2h0OiA0MDBweDsNCn0NCg0KLm15LWJ0bi1kaXYgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIG1hcmdpbi1ib3R0b206IDElOw0KfQ0KDQouaW50ZXJ2ZW50aW9uIHsNCiAgbWFyZ2luLXRvcDogMWVtOw0KfQ0KDQoubmV4dC1wcmV2OmhvdmVyIHsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQoNCi50YWJsZSB7DQogIHdpZHRoOiA5NSU7DQogIG1hcmdpbjogMCBhdXRvOw0KfQ0KLnRhYmxlIHRoZWFkIHRoLA0KLnRhYmxlIHRkLA0KLnRhYmxlIHRoIHsNCiAgYm9yZGVyOiAwOw0KICAvKiBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBibGFjazsgKi8NCn0NCg=="},{"version":3,"sources":["Planning.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Planning.vue","sourceRoot":"src/components/utils","sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"offset-2 col-md-10\">\r\n        <div class=\"row\">\r\n          <div class=\"my-btn-div col-md-12\">\r\n            <span type=\"button\" class=\"next-prev\" @click=\"previousWeek()\">\r\n              <b-icon icon=\"chevron-double-left\"></b-icon>\r\n              Précédent\r\n            </span>\r\n            <span type=\"button\" class=\"next-prev\" @click=\"nextWeek()\">\r\n              Suivant\r\n              <b-icon icon=\"chevron-double-right\"></b-icon>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2\" align=\"center\">\r\n        <b-calendar\r\n          v-model=\"date\"\r\n          value-as-date\r\n          hide-header\r\n          :start-weekday=\"1\"\r\n          :date-disabled-fn=\"dateDisabled\"\r\n        ></b-calendar>\r\n      </div>\r\n      <div class=\"col-md-10\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <p>Lundi</p>\r\n                <p>{{ dateSemaine[0] | formatDate }}</p>\r\n              </th>\r\n              <th>\r\n                <p>Mardi</p>\r\n                <p>{{ dateSemaine[1] | formatDate }}</p>\r\n              </th>\r\n              <th>\r\n                <p>Mercredi</p>\r\n                <p>{{ dateSemaine[2] | formatDate }}</p>\r\n              </th>\r\n              <th>\r\n                <p>Jeudi</p>\r\n                <p>{{ dateSemaine[3] | formatDate }}</p>\r\n              </th>\r\n              <th>\r\n                <p>Vendredi</p>\r\n                <p>{{ dateSemaine[4] | formatDate }}</p>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td v-for=\"item in edt\" :key=\"item.id\">\r\n                <div\r\n                  v-for=\"intervention in item\"\r\n                  :key=\"intervention.id\"\r\n                  class=\"intervention\">\r\n                  <p class=\"font-weight-bold h5\">\r\n                    {{ intervention.formationDto.titre }}\r\n                  </p>\r\n                  <p class=\"text-justify\">\r\n                    {{ intervention.formationDto.contenu }}\r\n                  </p>\r\n                  <div\r\n                    v-for=\"formateur in intervention.formateurDto\"\r\n                    :key=\"formateur.id\">\r\n                    <p>\r\n                      <span class=\"font-weight-bold\">Formateur : </span>\r\n                      {{ formateur.prenom }} {{ formateur.nom }}\r\n                    </p>\r\n                  </div>\r\n                  <router-link v-if=\"isFormateur\"\r\n                    :to=\"{ name: 'formateur_intervention_detail',\r\n                      params: { id: intervention.idIntervention },}\">\r\n                    <font-awesome-icon\r\n                      :icon=\"['fas', 'external-link-alt']\"\r\n                      class=\"icon text-primary\"/>\r\n                  </router-link>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { utilisateurService } from \"@/_services/utilisateur.service.js\";\r\nexport default {\r\n  name: \"Planning\",\r\n  data() {\r\n    return {\r\n      date: new Date(),\r\n    };\r\n  },\r\n  computed: {\r\n    dateAujourdhui() {\r\n      return this.date;\r\n    },\r\n    edt() {\r\n      this.date.setHours(0, 0, 0, 0);\r\n\r\n      //On veut récupérer l'edt de la semaine correspondant à la date donnée en propriété du composant\r\n      let result = [];\r\n      let edtTot = this.$store.getters.getPlanning;\r\n      //on vérifie toutes les journée (dates)\r\n      for (let i = 0; i < edtTot.length; i++) {\r\n        //Si l'écart entre ma date de référence et la date testée est > 6 jours, on passe\r\n        if (Math.abs(this.date - edtTot[i].date) > 6 * 24 * 60 * 60 * 1000)\r\n          //ATTENTION resultat en millisecondes => 6 jours * 24 h * 60 minutes * 60 secondes * 1000 (millisecondes)\r\n          continue;\r\n        //Date.getDay() : 0 Dimanche et 6 pour Samedi\r\n        //On remet à lundi -> Dimanche ou on garde Doimanche -> Samedi (comme bootstrap calendar)\r\n\r\n        let tempDate = this.stringToDate(edtTot[i].date);\r\n\r\n        if (this.date.getTime() == tempDate.getTime()) {\r\n          //Si le même jours que ma date de référence\r\n          result.push(edtTot[i]); // => on ajoute a notre edt de la semaine\r\n        } else if (this.date.getTime() < tempDate.getTime()) {\r\n          //Si this.date est avant edtTot[i].date\r\n          if (this.date.getDay() < tempDate.getDay()) {\r\n            //On compare les jours pour savoir si la même semaine. Si oui, on ajoute\r\n            result.push(edtTot[i]);\r\n          }\r\n        } else {\r\n          //Si this.date est après edtTot[i].date\r\n          if (this.date.getDay() > tempDate.getDay()) {\r\n            //On compare les jours pour savoir si la même semaine. Si oui, on ajoute\r\n            result.push(edtTot[i]);\r\n          }\r\n        }\r\n      }\r\n\r\n      // return result;\r\n      return this.triage(result);\r\n    },\r\n    dateSemaine() {\r\n      let dif = this.date.getDay() - 1;\r\n\r\n      let year = this.date.getFullYear();\r\n      let month = this.date.getMonth();\r\n      let day = this.date.getDate() - dif;\r\n\r\n      let arr = [\r\n        new Date(year, month, day),\r\n        new Date(year, month, day + 1),\r\n        new Date(year, month, day + 2),\r\n        new Date(year, month, day + 3),\r\n        new Date(year, month, day + 4),\r\n      ];\r\n\r\n      return arr;\r\n    },\r\n    isFormateur() {\r\n      return utilisateurService.isFormateur();\r\n    },\r\n    isEtudiant(){\r\n      return utilisateurService.isEtudiant();\r\n    }\r\n  },\r\n  methods: {\r\n    triage(data) {\r\n      //On trie le résultat dans un jolie tableau\r\n      let edtTrie = [];\r\n\r\n      for (let iJours = 0; iJours < 5; iJours++) {\r\n        let maJournee = [];\r\n\r\n        for (let i = 0; i < data.length; i++)\r\n          if (\r\n            this.dateSemaine[iJours].getTime() ==\r\n            this.stringToDate(data[i].date).getTime()\r\n          )\r\n            maJournee.push(data[i]);\r\n\r\n        edtTrie.push(maJournee);\r\n      }\r\n\r\n      return edtTrie;\r\n    },\r\n    stringToDate(maDate) {\r\n      // Le format de edtTot[i].date est : yyyy-mm-dd\r\n      let tempSplit = maDate.split(\"-\");\r\n      //On récupère sour format Date pour pouvoir .getDay()\r\n      //On month-1 car il y a décalage : bdd 1janv-12dec js : 0janv-11dec\r\n      tempSplit[1] = parseInt(tempSplit[1]) - 1;\r\n      let result = new Date(\r\n        tempSplit[0],\r\n        tempSplit[1].toString(),\r\n        tempSplit[2]\r\n      );\r\n\r\n      return result;\r\n    },\r\n    nextWeek() {\r\n      let newDate = new Date(\r\n        this.date.getFullYear(),\r\n        this.date.getMonth(),\r\n        this.date.getDate()\r\n      );\r\n      newDate.setDate(this.date.getDate() + 7);\r\n      this.date = newDate;\r\n    },\r\n    previousWeek() {\r\n      let newDate = new Date(\r\n        this.date.getFullYear(),\r\n        this.date.getMonth(),\r\n        this.date.getDate()\r\n      );\r\n      newDate.setDate(this.date.getDate() - 7);\r\n      this.date = newDate;\r\n    },\r\n    dateDisabled(ymd, date) {\r\n      // Disable weekends (Sunday = `0`, Saturday = `6`) and\r\n      // disable days that fall on the 13th of the month\r\n      const weekday = date.getDay();\r\n      // Return `true` if the date should be disabled\r\n      return weekday === 0 || weekday === 6;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  text-align: center;\r\n  table-layout: fixed;\r\n  min-height: 400px;\r\n}\r\n\r\n.my-btn-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 1%;\r\n}\r\n\r\n.intervention {\r\n  margin-top: 1em;\r\n}\r\n\r\n.next-prev:hover {\r\n  font-weight: bold;\r\n}\r\n\r\n.table {\r\n  width: 95%;\r\n  margin: 0 auto;\r\n}\r\n.table thead th,\r\n.table td,\r\n.table th {\r\n  border: 0;\r\n  /* border-right: 1px solid black; */\r\n}\r\n</style>\r\n"]}]}